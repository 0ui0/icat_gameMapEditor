// Generated by CoffeeScript 2.6.1
import Box from "./box";

import getColor from "../help/getColor";

export default function(obj) {
  var cancel, cancelWords, comp, confirm, confirmWords, content, contentAttrs, hideBtn, msg, ref, ref1, ref10, ref11, ref2, ref3, ref4, ref5, ref6, ref7, ref8, ref9, sign, tip, type;
  checkType(arguments, ["object"], "Comp(obj) in notice.coffee");
  confirm = (ref = obj.confirm) != null ? ref : () => {};
  cancel = (ref1 = obj.cancel) != null ? ref1 : () => {};
  confirmWords = (ref2 = obj.confirmWords) != null ? ref2 : "确定";
  cancelWords = (ref3 = obj.cancelWords) != null ? ref3 : "取消";
  content = (ref4 = obj.content) != null ? ref4 : void 0;
  comp = (ref5 = obj.comp) != null ? ref5 : void 0;
  hideBtn = (ref6 = obj.hideBtn) != null ? ref6 : 0;
  contentAttrs = (ref7 = obj.contentAttrs) != null ? ref7 : {};
  tip = (ref8 = obj.tip) != null ? ref8 : "提示";
  msg = (ref9 = obj.msg) != null ? ref9 : "没有传入提示消息哦！";
  type = (ref10 = obj.type) != null ? ref10 : "peace";
  sign = (ref11 = obj.sign) != null ? ref11 : Date.now();
  return {
    onbeforeremove: function({dom, attrs}) {
      dom.classList.add("bounceOut");
      return new Promise((res, rej) => {
        return setTimeout(() => {
          attrs.closeLayer();
          m.redraw();
          return res();
        }, 700);
      });
    },
    sign: sign,
    data: {
      confirm: confirm,
      confirmWords: confirmWords,
      cancel: cancel,
      cancelWords: cancelWords,
      tip: tip,
      msg: msg,
      content: content,
      comp: comp,
      hideBtn: hideBtn,
      contentAttrs: contentAttrs,
      type: type
    },
    oninit: function({attrs}) {
      //安装delete方法使得可以通过组件内部关闭
      this.data.contentAttrs.delete = attrs.delete;
      return this.data.contentAttrs.closeLayer = attrs.closeLayer;
    },
    view: function({attrs}) {
      if (comp) {
        return m(comp, contentAttrs);
      } else {
        return m("", [
          m(Box,
          {
            class: (function() {
              switch (this.data.type) {
                case "basic":
                  return "animated shake";
                case "peace":
                  return "animated pulse";
              }
            }).call(this),
            style: {
              border: "1px solid #727C88",
              padding: "0 0.5rem",
              maxWidth: "100vw",
              width: "max-content",
              boxSizing: "border-box",
              display: "grid",
              margin: "1rem auto",
              boxShadow: "0 0 2rem rgba(0,0,0,0.2)",
              borderRadius: "1rem",
              overflow: "hidden",
              gridTemplateAreas: `"x x"
"a a"
"b c"`
            },
            color: "white"
          },
          [
            // 如果有组件传入，直接展示组件

            //关闭小圈
            m("",
            {
              style: {
                gridArea: "x",
                display: "flex",
                alignItems: "center",
                justifyContent: "center",
                background: getColor("grey").back,
                borderRadius: "0 0 1rem 1rem",
                marginBottom: "0.5rem"
              }
            },
            [
              m(Box,
              {
                isBtn: true,
                onclick: () => {
                  return attrs.delete();
                },
                style: {
                  padding: 0,
                  border: 0,
                  display: "inline-block",
                  width: "1.2rem",
                  height: "1.2rem",
                  background: getColor("red").back,
                  borderRadius: "3rem"
                }
              }),
              m("",
              {
                style: {
                  flex: 1,
                  display: "flex",
                  justifyContent: "center",
                  alignItems: "center"
                }
              },
              [
                m("span",
                {
                  style: {
                    fontWeight: "bold"
                  }
                },
                this.data.tip)
              ])
            ]),
            this.data.content ? m("",
            {
              style: {
                gridArea: "a"
              }
            },
            [m(this.data.content,
            this.data.contentAttrs)]) : m(Box,
            {
              style: {
                gridArea: "a"
              }
            },
            [m("",
            this.data.msg)]),
            //确定
            hideBtn === 0 || hideBtn === 3 ? m(Box,
            {
              color: "red",
              style: {
                gridArea: "b"
              },
              isBtn: true,
              onclick: async(e) => {
                if (((await this.data.confirm(e,
            attrs.delete,
            this.data))) === void 0) {
                  return attrs.delete();
                }
              }
            },
            this.data.confirmWords) : m("",
            ""),
            //取消
            hideBtn === 0 || hideBtn === 2 ? m(Box,
            {
              style: {
                gridArea: "c"
              },
              isBtn: true,
              onclick: async(e) => {
                if (((await this.data.cancel(e,
            attrs.delete,
            this.data))) === void 0) {
                  return attrs.delete();
                }
              }
            },
            this.data.cancelWords) : m("",
            "")
          ])
        ]);
      }
    }
  };
};
