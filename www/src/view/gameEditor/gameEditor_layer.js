// Generated by CoffeeScript 2.6.1
var DivItem;

import Box from "../common/box";

import Tag from "../common/tag";

import gEData from "./gameEditor_data";

import getColor from "../help/getColor";

DivItem = function() {
  var showChild;
  showChild = false;
  return {
    view: function({attrs}) {
      var children, preDiv;
      preDiv = attrs.preDiv;
      children = gEData.divList.data.filter((preDiv) => {
        return preDiv.linkid === attrs.preDiv.id;
      });
      return m(Box, {
        isBtn: true,
        color: preDiv.isGroup ? "yellow" : void 0,
        style: {
          margin: "0.2rem",
          padding: "0.5rem 1rem",
          borderRadius: "0.2rem",
          border: preDiv.hasBorder === 1 ? `0.2rem solid ${getColor("yellow").back}` : preDiv.hasBorder === 2 ? `0.2rem solid ${getColor("green").back}` : void 0,
          outline: preDiv.checked ? "0.2rem solid red" : void 0,
          gridColumnStart: preDiv.isGroup ? 1 : void 0,
          gridColumnEnd: preDiv.isGroup ? 5 : void 0,
          boxShadow: "0 0 0.5rem rgba(0,0,0,0.2)",
          borderRadius: "0.3rem"
        },
        ext: {
          onclick: (e) => {
            var fn;
            fn = (preDiv) => {
              preDiv.check();
              children = gEData.divList.data.filter((preDiv1) => {
                return preDiv1.linkid === preDiv.id;
              });
              if (children.length > 0) {
                return children.forEach((child) => {
                  return fn(child);
                });
              }
            };
            fn(preDiv);
            return e.stopPropagation();
          }
        }
      }, [
        m("",
        [
          (preDiv.isGroup ? "组：" : ""),
          //preDiv.x + " " + preDiv.y
          preDiv.id.slice(0, 3),
          preDiv.hideState ? "[藏]" : "",
          preDiv.lockState ? "[锁]" : ""
        ]),
        preDiv.isGroup && children.length > 0 ? m(Tag,
        {
          isBtn: true,
          ext: {
            onclick: (e) => {
              showChild = !showChild;
              return e.stopPropagation();
            }
          }
        },
        showChild ? "=" : "+") : void 0,
        showChild === true ? m("",
        {
          style: {
            display: "grid",
            gridTemplateColumns: "auto auto auto"
          }
        },
        [
          children.map((preDiv) => {
            return m(DivItem,
          {
              preDiv: preDiv
            });
          })
        ]) : void 0
      ]);
    }
  };
};

export default function() {
  return {
    view: function() {
      return m("", {
        style: {
          overflow: "auto"
        },
        onclick: () => {
          return gEData.divList.data.forEach((preDiv) => {
            return preDiv.unCheck();
          });
        }
      }, [
        m("",
        {
          style: {
            position: "sticky",
            top: 0,
            background: "rgba(255,255,255)"
          }
        },
        [
          gEData.layer.menu.map((item,
          index) => {
            return m("",
          {
              style: {
                display: "inline-block",
                margin: "1rem",
                fontSize: index === gEData.layer.selected ? "1.8rem" : "1.6rem",
                color: "#aaa",
                cursor: "pointer",
                transition: "0.5s all ease"
              },
              onclick: () => {
                return gEData.layer.selected = index;
              }
            },
          item.name);
          }),
          gEData.layer.selected === 0 ? m("",
          [
            m(Tag,
            {
              isBtn: true,
              color: "yellow",
              ext: {
                onclick: (e) => {
                  gEData.divList.getCheckedItems().forEach((preDiv) => {
                    return preDiv.lockOrUnlock();
                  });
                  return e.stopPropagation();
                }
              }
            },
            "锁定/解锁"),
            m(Tag,
            {
              isBtn: true,
              color: "red",
              ext: {
                onclick: (e) => {
                  gEData.divList.hideOrShowCheckedItems();
                  return e.stopPropagation();
                }
              }
            },
            "隐藏/显示")
          ]) : void 0
        ]),
        gEData.layer.selected === 0 ? m(".animated.fadeIn",
        {
          style: {
            display: "grid",
            gridTemplateColumns: "auto auto auto",
            flexWrap: "wrap",
            background: "#fff"
          }
        },
        [
          gEData.divList.data.filter((preDiv) => {
            return preDiv.linkid === 0 || !preDiv.linkid;
          }).sort((x1,
          x2) => {
            return x1 - x2;
          }).map((preDiv) => {
            return m(DivItem,
          {
              preDiv: preDiv
            });
          })
        ]) : void 0
      ]);
    }
  };
};
